--- bin/socksify.in.orig	2017-02-22 00:56:48.164000000 -0500
+++ bin/socksify.in	2017-02-22 00:57:42.412000000 -0500
@@ -53,7 +53,7 @@
     exit 1
 fi
 
-SOCKSIFY_PRELOAD_LIBS="@SOCKSIFY_PRELOAD_LIBS@"
+#SOCKSIFY_PRELOAD_LIBS="@SOCKSIFY_PRELOAD_LIBS@"
 SOCKS_LIBDIR="${SOCKS_LIBDIR:-@LIBRARY_PREFIX@}"
 
 #platform that requires full path to libdsocks?
@@ -82,8 +82,12 @@
 @PRELOAD_VARIABLE@="${LIBRARY}${SOCKSIFY_PRELOAD_LIBS:+${PRELOAD_SEPERATOR}}${SOCKSIFY_PRELOAD_LIBS}${PRELOAD_POSTFIX:+${PRELOAD_SEPERATOR}}${PRELOAD_POSTFIX}"
 export @PRELOAD_VARIABLE@
 
-LD_LIBRARY_PATH="${SOCKS_LIBDIR}${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}"
-export LD_LIBRARY_PATH
+# There is no reason to set LD_LIBRARY_PATH, at least on Linux, where
+# LD_PRELOAD can contain a full path to the library.  Setting the
+# following breaks socksify on Linux/Alpha at least with
+# binutils-2.14.90.0.7-r3 (08 Dec 2003 agriffis)
+#LD_LIBRARY_PATH="${SOCKS_LIBDIR}${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}"
+#export LD_LIBRARY_PATH
 
 #SunOS 64-bit library path
 if test x"@ISA64DIR@" != x; then
